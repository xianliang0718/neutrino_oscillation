 /******************************************************************************
 *    This program is free software: you can redistribute it and/or modify     *
 *   it under the terms of the GNU General Public License as published by      *
 *   the Free Software Foundation, either version 3 of the License, or         *
 *   (at your option) any later version.                                       *
 *                                                                             *
 *   This program is distributed in the hope that it will be useful,           *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of            *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *
 *   GNU General Public License for more details.                              *
 *                                                                             *
 *   You should have received a copy of the GNU General Public License         *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.     *
 *                                                                             *   
 *   Authors:                                                                  *
 *      Carlos Arguelles (University of Wisconsin Madison)                     * 
 *         carguelles@icecube.wisc.edu                                         *
 *      Jordi Salvado (University of Wisconsin Madison)                        *
 *         jsalvado@icecube.wisc.edu                                           *
 *      Christopher Weaver (University of Wisconsin Madison)                   * 
 *         cweaver@icecube.wisc.edu                                            *
 ******************************************************************************/

{
	double c,s;
	(suv_new) . components[0]+=suv2.components[0];
	(suv_new) . components[7]+=suv2.components[7];
	(suv_new) . components[14]+=suv2.components[14];
	(suv_new) . components[21]+=suv2.components[21];
	(suv_new) . components[28]+=suv2.components[28];
	(suv_new) . components[35]+=suv2.components[35];
	c=cos(2*t*suv1.components[7]);
	s=sin(2*t*suv1.components[7]);
	(suv_new) . components[1]+=  c*suv2.components[1]  + s*suv2.components[6];
	(suv_new) . components[6]+=-(s*suv2.components[1]) + c*suv2.components[6];
	c=cos(t*(suv1.components[7] + sqrt(3)*suv1.components[14]));
	s=sin(t*(suv1.components[7] + sqrt(3)*suv1.components[14]));
	(suv_new) . components[2]+=   c*suv2.components[2]  + s*suv2.components[12];
	(suv_new) . components[12]+=-(s*suv2.components[2]) + c*suv2.components[12];
	c=cos(t*suv1.components[7] + (t*(suv1.components[14] + 2*sqrt(2)*suv1.components[21]))/sqrt(3));
	s=sin(t*suv1.components[7] + (t*(suv1.components[14] + 2*sqrt(2)*suv1.components[21]))/sqrt(3));
	(suv_new) . components[3]+=   c*suv2.components[3]  + s*suv2.components[18];
	(suv_new) . components[18]+=-(s*suv2.components[3]) + c*suv2.components[18];
	c=cos(t*suv1.components[7] + (t*suv1.components[14])/sqrt(3) + (t*suv1.components[21])/sqrt(6) + sqrt(2.5)*t*suv1.components[28]);
	s=sin(t*suv1.components[7] + (t*suv1.components[14])/sqrt(3) + (t*suv1.components[21])/sqrt(6) + sqrt(2.5)*t*suv1.components[28]);
	(suv_new) . components[4]+=   c*suv2.components[4]  + s*suv2.components[24];
	(suv_new) . components[24]+=-(s*suv2.components[4]) + c*suv2.components[24];
	c=cos(t*suv1.components[7] + (t*suv1.components[14])/sqrt(3) + (t*suv1.components[21])/sqrt(6) + (t*suv1.components[28])/sqrt(10) + 2*sqrt(0.6)*t*suv1.components[35]);
	s=sin(t*suv1.components[7] + (t*suv1.components[14])/sqrt(3) + (t*suv1.components[21])/sqrt(6) + (t*suv1.components[28])/sqrt(10) + 2*sqrt(0.6)*t*suv1.components[35]);
	(suv_new) . components[5]+=   c*suv2.components[5]  + s*suv2.components[30];
	(suv_new) . components[30]+=-(s*suv2.components[5]) + c*suv2.components[30];
	c=cos(t*(suv1.components[7] - sqrt(3)*suv1.components[14]));
	s=sin(t*(suv1.components[7] - sqrt(3)*suv1.components[14]));
	(suv_new) . components[8]+= c*suv2.components[8] - s*suv2.components[13];
	(suv_new) . components[13]+=s*suv2.components[8] + c*suv2.components[13];
	c=cos(t*suv1.components[7] - (t*(suv1.components[14] + 2*sqrt(2)*suv1.components[21]))/sqrt(3));
	s=sin(t*suv1.components[7] - (t*(suv1.components[14] + 2*sqrt(2)*suv1.components[21]))/sqrt(3));
	(suv_new) . components[9]+= c*suv2.components[9] - s*suv2.components[19];
	(suv_new) . components[19]+=s*suv2.components[9] + c*suv2.components[19];
	c=cos(t*suv1.components[7] - (t*(2*sqrt(3)*suv1.components[14] + sqrt(6)*suv1.components[21] + 3*sqrt(10)*suv1.components[28]))/6.);
	s=sin(t*suv1.components[7] - (t*(2*sqrt(3)*suv1.components[14] + sqrt(6)*suv1.components[21] + 3*sqrt(10)*suv1.components[28]))/6.);
	(suv_new) . components[10]+=c*suv2.components[10] - s*suv2.components[25];
	(suv_new) . components[25]+=s*suv2.components[10] + c*suv2.components[25];
	c=cos(t*suv1.components[7] - (t*(10*sqrt(3)*suv1.components[14] + 5*sqrt(6)*suv1.components[21] + 3*sqrt(10)*suv1.components[28] + 12*sqrt(15)*suv1.components[35]))/30.);
	s=sin(t*suv1.components[7] - (t*(10*sqrt(3)*suv1.components[14] + 5*sqrt(6)*suv1.components[21] + 3*sqrt(10)*suv1.components[28] + 12*sqrt(15)*suv1.components[35]))/30.);
	(suv_new) . components[11]+=c*suv2.components[11] - s*suv2.components[31];
	(suv_new) . components[31]+=s*suv2.components[11] + c*suv2.components[31];
	c=cos((2*t*(suv1.components[14] - sqrt(2)*suv1.components[21]))/sqrt(3));
	s=sin((2*t*(suv1.components[14] - sqrt(2)*suv1.components[21]))/sqrt(3));
	(suv_new) . components[15]+=c*suv2.components[15] - s*suv2.components[20];
	(suv_new) . components[20]+=s*suv2.components[15] + c*suv2.components[20];
	c=cos((t*(4*sqrt(3)*suv1.components[14] - sqrt(6)*suv1.components[21] - 3*sqrt(10)*suv1.components[28]))/6.);
	s=sin((t*(4*sqrt(3)*suv1.components[14] - sqrt(6)*suv1.components[21] - 3*sqrt(10)*suv1.components[28]))/6.);
	(suv_new) . components[16]+=c*suv2.components[16] - s*suv2.components[26];
	(suv_new) . components[26]+=s*suv2.components[16] + c*suv2.components[26];
	c=cos((2*t*suv1.components[14])/sqrt(3) - (t*suv1.components[21])/sqrt(6) - (t*suv1.components[28])/sqrt(10) - 2*sqrt(0.6)*t*suv1.components[35]);
	s=sin((2*t*suv1.components[14])/sqrt(3) - (t*suv1.components[21])/sqrt(6) - (t*suv1.components[28])/sqrt(10) - 2*sqrt(0.6)*t*suv1.components[35]);
	(suv_new) . components[17]+=c*suv2.components[17] - s*suv2.components[32];
	(suv_new) . components[32]+=s*suv2.components[17] + c*suv2.components[32];
	c=cos(sqrt(1.5)*t*suv1.components[21] - sqrt(2.5)*t*suv1.components[28]);
	s=sin(sqrt(1.5)*t*suv1.components[21] - sqrt(2.5)*t*suv1.components[28]);
	(suv_new) . components[22]+=c*suv2.components[22] - s*suv2.components[27];
	(suv_new) . components[27]+=s*suv2.components[22] + c*suv2.components[27];
	c=cos(sqrt(1.5)*t*suv1.components[21] - (t*suv1.components[28])/sqrt(10) - 2*sqrt(0.6)*t*suv1.components[35]);
	s=sin(sqrt(1.5)*t*suv1.components[21] - (t*suv1.components[28])/sqrt(10) - 2*sqrt(0.6)*t*suv1.components[35]);
	(suv_new) . components[23]+=c*suv2.components[23] - s*suv2.components[33];
	(suv_new) . components[33]+=s*suv2.components[23] + c*suv2.components[33];
	c=cos(2*sqrt(0.4)*t*suv1.components[28] - 2*sqrt(0.6)*t*suv1.components[35]);
	s=sin(2*sqrt(0.4)*t*suv1.components[28] - 2*sqrt(0.6)*t*suv1.components[35]);
	(suv_new) . components[29]+=c*suv2.components[29] - s*suv2.components[34];
	(suv_new) . components[34]+=s*suv2.components[29] + c*suv2.components[34];
}