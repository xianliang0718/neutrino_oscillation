 /******************************************************************************
 *    This program is free software: you can redistribute it and/or modify     *
 *   it under the terms of the GNU General Public License as published by      *
 *   the Free Software Foundation, either version 3 of the License, or         *
 *   (at your option) any later version.                                       *
 *                                                                             *
 *   This program is distributed in the hope that it will be useful,           *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of            *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *
 *   GNU General Public License for more details.                              *
 *                                                                             *
 *   You should have received a copy of the GNU General Public License         *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.     *
 *                                                                             *
 *   Authors:                                                                  *
 *      Carlos Arguelles (University of Wisconsin Madison)                     *
 *         carguelles@icecube.wisc.edu                                         *
 *      Jordi Salvado (University of Wisconsin Madison)                        *
 *         jsalvado@icecube.wisc.edu                                           *
 *      Christopher Weaver (University of Wisconsin Madison)                   *
 *         cweaver@icecube.wisc.edu                                            *
 *      Alexander Trettin (DESY)                                               *
 *         atrettin@icecube.wisc.edu                                           *
 ******************************************************************************/
 // greater than cutoff implies setting to zero
 if (fabs(term) > fabs(cutoff)){
    SX[i] = 0;
    CX[i] = 0;
 // If we are below the cutoff, but above the threshold where we begin to apply the 
 // filter gradually, we do that.
 }else if(fabs(term) > fabs(cutoff) - fabs(scale)){
    SX[i] *= (fabs(cutoff) - fabs(term))/fabs(scale);
    CX[i] *= (fabs(cutoff) - fabs(term))/fabs(scale);
 }
 // if neither of the cases above applied, we do nothing